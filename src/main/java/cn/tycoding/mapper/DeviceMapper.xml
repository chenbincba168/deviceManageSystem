<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.tycoding.mapper.DeviceMapper">

    <!-- resultMap用于实现映射结果集 -->
    <resultMap id="BaseResultMap" type="cn.tycoding.pojo.Device">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="deviceName" property="deviceName" jdbcType="VARCHAR"/>
        <result column="deviceSN" property="deviceSN" jdbcType="VARCHAR"/>
        <result column="deviceIP" property="deviceIP" jdbcType="VARCHAR"/>
        <result column="deviceGroup" property="deviceGroup" jdbcType="VARCHAR"/>
        <result column="deviceDirection" property="deviceDirection" jdbcType="VARCHAR"/>
        <result column="deviceProperty" property="deviceProperty" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 客户信息保存的方法 -->
    <insert id="create" parameterType="Device">
        insert into
        tb_device(
          id,
          deviceName,
          deviceSN,
          deviceIP,
          deviceGroup,
          deviceDirection,
          deviceProperty
          )
        values(
          #{id},
          #{deviceName},
          #{deviceSN},
          #{deviceIP},
          #{deviceGroup},
          #{deviceDirection},
          #{deviceProperty}
        );
    </insert>

    <!-- 根据id删除信息的方法 -->
    <delete id="delete" parameterType="Long">
        delete from tb_device where id = #{id}
    </delete>

    <!-- 根据客户id查询客户信息的方法 -->
    <select id="findById" parameterType="Long" resultType="Device">
        select * from tb_device where id = #{id}
    </select>

    <!-- 更新客户信息的方法 -->
    <update id="update" parameterType="Device">
        update tb_device set
            id = #{id},
            deviceName = #{deviceName},
            deviceSN = #{deviceSN},
            deviceIP = #{deviceIP},
            deviceGroup = #{deviceGroup},
            deviceDirection = #{deviceDirection},
            deviceProperty = #{deviceProperty},
        where id = #{id}
    </update>

    <!-- 分页-条件查询 -->
    <select id="findByPage" parameterType="cn.tycoding.pojo.Device" resultMap="BaseResultMap">
        SELECT * FROM tb_device WHERE 1=1
        <if test="deviceName != null">
            AND name LIKE CONCAT('%', #{deviceName}, '%')
        </if>
        <if test="deviceSN != null">
            AND deviceSN LIKE CONCAT('%', #{deviceSN}, '%')
        </if>
    </select>

    <!--&lt;!&ndash; 分页查询 &ndash;&gt;-->
    <!--<select id="findByPage" parameterType="Map" resultMap="BaseResultMap">-->
        <!--select * from customer-->
        <!--<if test="start != null and size != null">-->
            <!--limit #{start},#{size}-->
        <!--</if>-->
    <!--</select>-->

    <!--&lt;!&ndash; 多条件查询 &ndash;&gt;-->
    <!--<select id="findCondition" parameterType="Map" resultMap="BaseResultMap">-->
        <!--&lt;!&ndash; where 1=1 可以保证where后的语句永远是正确的-->
            <!--因为在where后的动态SQL可能会执行也可能不会不会执行，如果没有执行，那么where后将跟一个空值，那么显然这样是会报错的-->
        <!--&ndash;&gt;-->
        <!--select * from customer where 1 = 1-->
        <!--<if test="c_name != null and c_name != ''">-->
            <!--and c_name like concat('%', #{c_name}, '%')-->
        <!--</if>-->
        <!--<if test="c_telephone != null and c_telephone != ''">-->
            <!--and c_telephone like concat('%', #{c_telephone}, '%')-->
        <!--</if>-->
        <!--&lt;!&ndash; 我们通过在Service中的计算决定了我们每次请求的数据应该从那一页开始，那一页结束 &ndash;&gt;-->
        <!--<if test="start != null and size != null">-->
            <!--limit #{start},#{size}-->
        <!--</if>-->
    <!--</select>-->

</mapper>